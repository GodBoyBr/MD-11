<?xml version="1.0"?>

<!-- McDonnell Douglas MD-11 FCC -->
<!-- Copyright (c) 2020 Josh Davidson (Octal450) -->

<system name="MD-11: FCC">
	
	<property value="0">fcc/lsas/pah/pid</property>
	<property value="0">fcc/elevator-feel/manual</property>
	<property value="0">fcc/elevator-feel/speed</property>
	<property value="0">fcc/yaw/tc-pd</property>
	<property value="0">fcs/spoiler-left-feedback</property>
	<property value="0">fcs/spoiler-right-feedback</property>
	<property value="0">spoilers/auto-speedbrake-feedback</property>
	<property value="0">/gear/abs/brake-cmd</property>
	<property value="0">/gear/abs/brake-cmd-v</property>
	<property value="0">/gear/abs/disarm</property>
	<property value="0">/gear/abs/spoilers-cmd-deg</property>
	
	<!-- Default gains for tuning -->
	<property value="0">fcc/lsas/pah/p-gain</property>
	<property value="0">fcc/lsas/pah/i-gain</property>
	<property value="0">fcc/lsas/pah/d-gain</property>
	<property value="0">fcc/lsas/prd/p-gain</property>
	<property value="0">fcc/yaw/yd-p-gain</property>
	<property value="0">fcc/yaw/tc-p-gain</property>
	<property value="0">fcc/yaw/tc-d-gain</property>
	
	<!-- AFS stuff -->
	<property value="0">fcc/afs/roll-cmd</property>
	<property value="0">fcc/afs/pitch-cmd</property>
	<property value="0">fcc/afs/yaw-cmd</property>
	
	<channel name="Libraries">
		
		<switch name="fcc/afs/enabled">
			<default value="0"/>
			<test logic="OR" value="1">
				/it-autoflight/output/ap1 eq 1
				/it-autoflight/output/ap2 eq 1
			</test>
		</switch>
		
		<switch name="aero/alpha-deg-fixed">
			<default value="0"/>
			<test value="aero/alpha-deg">
				gear/unit[0]/WOW eq 0
			</test>
		</switch>
		
		<lag_filter name="aero/alpha-deg-damped">
			<input>aero/alpha-deg-fixed</input>
			<c1>10</c1>
		</lag_filter>
	
	</channel>
	
	<channel name="LSAS Logic">
		
		<switch name="fcc/lsas/left-out-active">
			<default value="0"/>
			<test logic="AND" value="1">
				/controls/fctl/lsas-left-out eq 1
				/systems/hydraulics/sys-1-psi ge 1500
				/systems/electrical/bus/dc-3 ge 25
				/systems/failures/fctl/lsas-left-out ne 1
				libraries/any-irs-aligned eq 1
			</test>
			<test logic="AND" value="1">
				/controls/fctl/lsas-left-out eq 1
				/systems/hydraulics/sys-2-psi ge 1500
				/systems/electrical/bus/dc-3 ge 25
				/systems/failures/fctl/lsas-left-out ne 1
				libraries/any-irs-aligned eq 1
			</test>
		</switch>
		
		<switch name="fcc/lsas/left-in-active">
			<default value="0"/>
			<test logic="AND" value="1">
				/controls/fctl/lsas-left-in eq 1
				/systems/hydraulics/sys-2-psi ge 1500
				/systems/electrical/bus/l-emer-dc ge 25
				/systems/failures/fctl/lsas-left-in ne 1
				libraries/any-irs-aligned eq 1
			</test>
			<test logic="AND" value="1">
				/controls/fctl/lsas-left-in eq 1
				/systems/hydraulics/sys-3-psi ge 1500
				/systems/electrical/bus/l-emer-dc ge 25
				/systems/failures/fctl/lsas-left-in ne 1
				libraries/any-irs-aligned eq 1
			</test>
		</switch>
		
		<switch name="fcc/lsas/right-in-active">
			<default value="0"/>
			<test logic="AND" value="1">
				/controls/fctl/lsas-right-in eq 1
				/systems/hydraulics/sys-1-psi ge 1500
				/systems/electrical/bus/r-emer-dc ge 25
				/systems/failures/fctl/lsas-right-in ne 1
				libraries/any-irs-aligned eq 1
			</test>
			<test logic="AND" value="1">
				/controls/fctl/lsas-right-in eq 1
				/systems/hydraulics/sys-3-psi ge 1500
				/systems/electrical/bus/r-emer-dc ge 25
				/systems/failures/fctl/lsas-right-in ne 1
				libraries/any-irs-aligned eq 1
			</test>
		</switch>
		
		<switch name="fcc/lsas/right-out-active">
			<default value="0"/>
			<test logic="AND" value="1">
				/controls/fctl/lsas-right-out eq 1
				/systems/hydraulics/sys-1-psi ge 1500
				/systems/electrical/bus/dc-1 ge 25
				/systems/failures/fctl/lsas-right-out ne 1
				libraries/any-irs-aligned eq 1
			</test>
			<test logic="AND" value="1">
				/controls/fctl/lsas-right-out eq 1
				/systems/hydraulics/sys-2-psi ge 1500
				/systems/electrical/bus/dc-1 ge 25
				/systems/failures/fctl/lsas-right-out ne 1
				libraries/any-irs-aligned eq 1
			</test>
		</switch>
		
		<summer name="fcc/lsas/channels-active">
			<input>fcc/lsas/left-out-active</input>
			<input>fcc/lsas/left-in-active</input>
			<input>fcc/lsas/right-in-active</input>
			<input>fcc/lsas/right-out-active</input>
		</summer>
		
		<switch name="fcc/lsas/pah/gain-switch">
			<default value="1"/>
			<test logic="AND" value="0">
				fcc/afs/enabled eq 0
				attitude/pitch-rad le 0.558505
				attitude/pitch-rad ge -0.20944
				attitude/roll-rad le 0.558505
				attitude/roll-rad ge -0.558505
				/controls/flight/elevator le 0.02
				/controls/flight/elevator ge -0.02
				position/wow eq 0
				/position/gear-agl-ft ge 100
				fcc/lsas/channels-active gt 0
			</test>
		</switch>
		
		<switch name="fcc/lsas/prd/gain-switch-input">
			<default value="0"/>
			<test logic="OR" value="1">
				/controls/flight/elevator gt 0.02
				/controls/flight/elevator lt -0.02
			</test>
		</switch>
		
		<switch name="fcc/lsas/prd/gain-switch">
			<default value="1"/>
			<test logic="AND" value="0">
				fcc/afs/enabled eq 0
				attitude/pitch-rad le 0.558505
				attitude/pitch-rad ge -0.20944
				attitude/roll-rad le 0.558505
				attitude/roll-rad ge -0.558505
				fcc/lsas/prd/gain-switch-input eq 1
				position/wow eq 0
				/position/gear-agl-ft ge 100
				fcc/lsas/channels-active gt 0
			</test>
		</switch>
		
		<switch name="fcc/lsas/pap/gain-switch">
			<default value="1"/>
			<test logic="AND" value="0">
				fcc/afs/enabled eq 0
				position/wow eq 1
			</test>
			<test logic="AND" value="0">
				fcc/afs/enabled eq 0
				/position/gear-agl-ft le 100
			</test>
		</switch>
		
		<switch name="fcc/lsas/pnl/gain-switch">
			<default value="1"/>
			<test logic="AND" value="0">
				fcc/afs/enabled eq 0
				gear/unit[1]/WOW eq 1
				gear/unit[2]/WOW eq 1
				spoilers/auto-speedbrake-feedback gt 0
			</test>
		</switch>
	
	</channel>
	
	<channel name="Yaw Damper Logic">
		
		<switch name="fcc/yaw/avail-upper-a">
			<default value="0"/>
			<test logic="AND" value="1">
				/controls/fctl/yd-upper-a eq 1
				/systems/hydraulics/sys-1-psi ge 1500
				/systems/electrical/bus/dc-3 ge 25
				/systems/failures/fctl/yd-upper-a ne 1
				libraries/any-irs-aligned eq 1
			</test>
			<test logic="AND" value="1">
				/controls/fctl/yd-upper-a eq 1
				/systems/hydraulics/nrmp/sys-2-to-sys-1 ge 1500
				/systems/electrical/bus/dc-3 ge 25
				/systems/failures/fctl/yd-upper-a ne 1
				libraries/any-irs-aligned eq 1
			</test>
		</switch>
		
		<switch name="fcc/yaw/avail-upper-b">
			<default value="0"/>
			<test logic="AND" value="1">
				/controls/fctl/yd-upper-b eq 1
				/systems/hydraulics/sys-1-psi ge 1500
				/systems/electrical/bus/dc-3 ge 25
				/systems/failures/fctl/yd-upper-b ne 1
				libraries/any-irs-aligned eq 1
			</test>
			<test logic="AND" value="1">
				/controls/fctl/yd-upper-b eq 1
				/systems/hydraulics/nrmp/sys-2-to-sys-1 ge 1500
				/systems/electrical/bus/dc-3 ge 25
				/systems/failures/fctl/yd-upper-b ne 1
				libraries/any-irs-aligned eq 1
			</test>
		</switch>
		
		<switch name="fcc/yaw/avail-lower-a">
			<default value="0"/>
			<test logic="AND" value="1">
				/controls/fctl/yd-lower-a eq 1
				/systems/hydraulics/sys-2-psi ge 1500
				/systems/electrical/bus/dc-1 ge 25
				/systems/failures/fctl/yd-lower-a ne 1
				libraries/any-irs-aligned eq 1
			</test>
			<test logic="AND" value="1">
				/controls/fctl/yd-lower-a eq 1
				/systems/hydraulics/nrmp/sys-3-to-sys-2 ge 1500
				/systems/electrical/bus/dc-1 ge 25
				/systems/failures/fctl/yd-lower-a ne 1
				libraries/any-irs-aligned eq 1
			</test>
		</switch>
		
		<switch name="fcc/yaw/avail-lower-b">
			<default value="0"/>
			<test logic="AND" value="1">
				/controls/fctl/yd-lower-b eq 1
				/systems/hydraulics/sys-2-psi ge 1500
				/systems/electrical/bus/dc-1 ge 25
				/systems/failures/fctl/yd-lower-b ne 1
				libraries/any-irs-aligned eq 1
			</test>
			<test logic="AND" value="1">
				/controls/fctl/yd-lower-b eq 1
				/systems/hydraulics/nrmp/sys-3-to-sys-2 ge 1500
				/systems/electrical/bus/dc-1 ge 25
				/systems/failures/fctl/yd-lower-b ne 1
				libraries/any-irs-aligned eq 1
			</test>
		</switch>
		
		<switch name="fcc/yaw/gain-switch">
			<default value="1"/>
			<test value="1">
				position/wow eq 1
				/position/gear-agl-ft lt 50
			</test>
			<test logic="OR" value="0">
				fcc/yaw/avail-upper-a eq 1
				fcc/yaw/avail-upper-b eq 1
				fcc/yaw/avail-lower-a eq 1
				fcc/yaw/avail-lower-b eq 1
			</test>
		</switch>
	
	</channel>
	
	<channel name="Gains">
		
		<fcs_function name="fcc/lsas/pah/p-gain">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<independentVar lookup="column">fcc/lsas/pah/gain-switch</independentVar>
					<tableData>
						     0   1
						140  21  0
						360   7  0
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<fcs_function name="fcc/lsas/pah/i-gain">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<independentVar lookup="column">fcc/lsas/pah/gain-switch</independentVar>
					<tableData>
						     0    1
						140  9.0  0.0
						360  1.7  0.0
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<fcs_function name="fcc/lsas/pah/d-gain">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<independentVar lookup="column">fcc/lsas/pah/gain-switch</independentVar>
					<tableData>
						     0     1
						140  11.0  0.0
						360   2.5  0.0
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<fcs_function name="fcc/lsas/prd/p-gain">
			<function>
				<product>
					<table>
						<independentVar lookup="row">velocities/vc-kts</independentVar>
						<independentVar lookup="column">fcc/lsas/prd/gain-switch</independentVar>
						<tableData>
							     0    1
							140  6.0  0.0
							360  2.0  0.0
						</tableData>
					</table>
					<table>
						<independentVar lookup="row">/instrumentation/altimeter/indicated-altitude-ft</independentVar>
						<tableData>
							16500  0.3
							20000  1.0
						</tableData>
					</table>
				</product>
			</function>
		</fcs_function>
		
		<fcs_function name="fcc/yaw/yd-p-gain">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<independentVar lookup="column">fcc/yaw/gain-switch</independentVar>
					<tableData>
						     0    1
						140 -7.5  0.0
						360 -1.0  0.0
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<fcs_function name="fcc/yaw/tc-p-gain">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<independentVar lookup="column">fcc/yaw/gain-switch</independentVar>
					<tableData>
						     0    1
						140  1.5  0.0
						360  0.5  0.0
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<fcs_function name="fcc/yaw/tc-d-gain">
			<function>
				<table>
					<independentVar lookup="row">velocities/vc-kts</independentVar>
					<independentVar lookup="column">fcc/yaw/gain-switch</independentVar>
					<tableData>
						     0    1
						140  3.0  0.0
						360  1.0  0.0
					</tableData>
				</table>
			</function>
		</fcs_function>
	
	</channel>
	
	<channel name="FCC: Pitch Axis and LSAS">
		
		<fcs_function name="fcc/lsas/thetadot-rad_sec">
			<function>
				<toradians>
					<property>/orientation/pitch-rate-degps</property>
				</toradians>
			</function>
		</fcs_function>
		
		<switch name="fcc/lsas/t-r_s-s">
			<default value="fcc/lsas/thetadot-rad_sec"/>
			<test value="0">
				gear/unit[0]/WOW eq 1
			</test>
		</switch>
		
		<washout_filter name="fcc/lsas/thetadot-washout">
			<input>fcc/lsas/thetadot-rad_sec</input>
			<c1>0.5</c1>
		</washout_filter>
		
		<switch name="fcc/lsas/thetadot-washout-s">
			<default value="fcc/lsas/thetadot-washout"/>
			<test value="0">
				gear/unit[0]/WOW eq 1
			</test>
		</switch>
		
		<scheduled_gain name="fcc/lsas/pah/p-gain-scheduled"> <!-- Schedule gain to compensate for inactive channels -->
			<input>fcc/lsas/pah/p-gain</input>
			<table>
				<independentVar lookup="row">fcc/lsas/channels-active</independentVar>
				<tableData>
					0  1.000
					1  4.000
					2  2.000
					3  1.333
					4  1.000
				</tableData>
			</table>
		</scheduled_gain>
		
		<scheduled_gain name="fcc/lsas/pah/i-gain-scheduled"> <!-- Schedule gain to compensate for inactive channels -->
			<input>fcc/lsas/pah/i-gain</input>
			<table>
				<independentVar lookup="row">fcc/lsas/channels-active</independentVar>
				<tableData>
					0  1.000
					1  4.000
					2  2.000
					3  1.333
					4  1.000
				</tableData>
			</table>
		</scheduled_gain>
		
		<scheduled_gain name="fcc/lsas/pah/d-gain-scheduled"> <!-- Schedule gain to compensate for inactive channels -->
			<input>fcc/lsas/pah/d-gain</input>
			<table>
				<independentVar lookup="row">fcc/lsas/channels-active</independentVar>
				<tableData>
					0  1.000
					1  4.000
					2  2.000
					3  1.333
					4  1.000
				</tableData>
			</table>
		</scheduled_gain>
		
		<switch name="fcc/lsas/pah/trigger">
			<default value="0"/>
			<test value="-1">
				fcc/lsas/pah/gain-switch gt 0
			</test>
			<test logic="OR" value="1">
				fcc/lsas/pah/pid le -0.248
				fcc/lsas/pah/pid ge 0.248
			</test>
		</switch>
		
		<pid name="fcc/lsas/pah/pid-v">
			<input>fcc/lsas/t-r_s-s</input>
			<kp>fcc/lsas/pah/p-gain-scheduled</kp>
			<ki>fcc/lsas/pah/i-gain-scheduled</ki>
			<kd>fcc/lsas/pah/d-gain-scheduled</kd>
			<trigger>fcc/lsas/pah/trigger</trigger>
			<clipto>
				<min>-0.249</min>
				<max>0.249</max>
			</clipto>
			<output>fcc/lsas/pah/pid</output>
		</pid>
		
		<scheduled_gain name="fcc/lsas/prd/p-gain-scheduled"> <!-- Schedule gain to compensate for inactive channels -->
			<input>fcc/lsas/prd/p-gain</input>
			<table>
				<independentVar lookup="row">fcc/lsas/channels-active</independentVar>
				<tableData>
					0  1.000
					1  4.000
					2  2.000
					3  1.333
					4  1.000
				</tableData>
			</table>
		</scheduled_gain>
		
		<pure_gain name="fcc/lsas/prd/thetadot-damper">
			<input>fcc/lsas/thetadot-washout-s</input>
			<gain>fcc/lsas/prd/p-gain-scheduled</gain>
			<clipto>
				<min>-0.249</min>
				<max>0.249</max>
			</clipto>
		</pure_gain>
		
		<fcs_function name="fcc/lsas/pap/max-pitch">
			<function>
				<table>
					<independentVar lookup="row">/position/gear-agl-ft</independentVar>
					<tableData>
						 2  0.165806 <!-- 9.5 -->
						40  0.523599 <!-- 30 -->
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<summer name="fcc/lsas/pap/max-error">
			<input>attitude/pitch-rad</input>
			<input>-fcc/lsas/pap/max-pitch</input>
		</summer>
		
		<fcs_function name="fcc/lsas/pap/output"> <!-- Limit upwards elevator -->
			<function>
				<ifthen>
					<eq>
						<property>fcc/lsas/pap/gain-switch</property>
						<value>0</value>
					</eq>
					<table>
						<independentVar lookup="row">fcc/lsas/pap/max-error</independentVar>
						<tableData>
							-0.0174533  0.000
							 0.0000000  0.249
						</tableData>
					</table>
					<value>0</value>
				</ifthen>
			</function>
		</fcs_function>
		
		<switch name="fcc/lsas/pnl/output">
			<default value="0"/>
			<test logic="AND" value="0.23256"> <!-- About 4 degrees -->
				fcc/lsas/pnl/gain-switch eq 0
				fcs/spoiler-left-feedback gt 10
				fcs/spoiler-right-feedback gt 10
			</test>
			<test value="0.17442"> <!-- About 3 degrees -->
				fcc/lsas/pnl/gain-switch eq 0
			</test>
		</switch>
		
		<summer name="fcc/lsas/output-sum">
			<input>fcc/lsas/pah/pid</input> <!-- Pitch Attitude Hold -->
			<input>fcc/lsas/prd/thetadot-damper</input> <!-- Pitch Rate Damping -->
			<input>fcc/lsas/pap/output</input> <!-- Pitch Attitude Protection -->
			<input>fcc/lsas/pnl/output</input> <!-- Positive Nose Lowering -->
			<clipto> <!-- +/- 5 degrees -->
				<min>-0.249</min>
				<max>0.249</max>
			</clipto>
		</summer>
		
		<switch name="fcc/elevator-feel/power">
			<default value="0"/>
			<test logic="OR" value="1">
				/systems/electrical/bus/dc-1 ge 25
				/systems/electrical/bus/dc-2 ge 25
				/systems/electrical/bus/dc-3 ge 25
				/systems/electrical/bus/l-emer-dc ge 25
				/systems/electrical/bus/r-emer-dc ge 25
			</test>
		</switch>
		
		<switch name="fcc/elevator-feel/auto">
			<default value="0"/>
			<test logic="AND" value="1">
				/controls/fctl/elevator-feel-man ne 1
				fcc/elevator-feel/power eq 1
				/systems/failures/fctl/elevator-feel ne 1
			</test>
		</switch>
		
		<switch name="fcc/elevator-feel/switch"> <!-- Manual knob control is in libraries.xml -->
			<default value="fcc/elevator-feel/speed"/>
			<test value="velocities/vc-kts">
				fcc/elevator-feel/auto eq 1
			</test>
			<output>fcc/elevator-feel/speed</output>
			<clipto>
				<min>120</min>
				<max>300</max>
			</clipto>
		</switch>
		
		<fcs_function name="fcc/elevator-feel/gain">
			<function>
				<table>
					<independentVar lookup="row">fcc/elevator-feel/speed</independentVar>
					<tableData>
						120  1.000
						140  0.925
						200  0.825
						300  0.610
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<pure_gain name="fcc/elevator-feel/output">
			<input>/controls/flight/elevator</input>
			<gain>fcc/elevator-feel/gain</gain>
		</pure_gain>
		
		<pure_gain name="fcc/elevator-feel/afs-output">
			<description>Schedule the AFS the same as yoke for when AFS is disconnected with yoke movement</description>
			<input>fcc/afs/pitch-cmd</input>
			<gain>fcc/elevator-feel/gain</gain>
		</pure_gain>
		
		<switch name="fcc/elevator-feel/output-no-pah">
			<default value="fcc/elevator-feel/output"/>
			<test value="0">
				fcc/lsas/pah/gain-switch eq 0
			</test>
		</switch>
		
		<summer name="fcc/lsas/elevator-output">
			<input>fcc/elevator-feel/output-no-pah</input>
			<input>fcc/lsas/output-sum</input>
			<clipto>
				<min>-1.0</min>
				<max>1.0</max>
			</clipto>
		</summer>
		
		<switch name="fcc/elevator-o-l-output">
			<default value="fcc/elevator-feel/output"/>
			<test logic="AND" value="fcc/lsas/elevator-output">
				fcc/lsas/left-out-active eq 1
				fcc/afs/enabled ne 1
			</test>
			<test value="fcc/elevator-feel/afs-output">
				fcc/afs/enabled eq 1
			</test>
		</switch>
		
		<switch name="fcc/elevator-i-l-output">
			<default value="fcc/elevator-feel/output"/>
			<test logic="AND" value="fcc/lsas/elevator-output">
				fcc/lsas/left-in-active eq 1
				fcc/afs/enabled ne 1
			</test>
			<test value="fcc/elevator-feel/afs-output">
				fcc/afs/enabled eq 1
			</test>
		</switch>
		
		<switch name="fcc/elevator-i-r-output">
			<default value="fcc/elevator-feel/output"/>
			<test logic="AND" value="fcc/lsas/elevator-output">
				fcc/lsas/right-in-active eq 1
				fcc/afs/enabled ne 1
			</test>
			<test value="fcc/elevator-feel/afs-output">
				fcc/afs/enabled eq 1
			</test>
		</switch>
		
		<switch name="fcc/elevator-o-r-output">
			<default value="fcc/elevator-feel/output"/>
			<test logic="AND" value="fcc/lsas/elevator-output">
				fcc/lsas/right-out-active eq 1
				fcc/afs/enabled ne 1
			</test>
			<test value="fcc/elevator-feel/afs-output">
				fcc/afs/enabled eq 1
			</test>
		</switch>
		
		<switch name="fcc/lsas/autotrim-switch">
			<default value="0"/>
			<test logic="AND" value="1">
				fcc/lsas/pah/gain-switch eq 0
				fcc/lsas/pah/pid ge 0.02
				/controls/flight/elevator-trim le 0.064516
				attitude/roll-rad ge -0.0890118
				attitude/roll-rad le 0.0890118
			</test>
			<test logic="AND" value="2">
				fcc/lsas/pah/gain-switch eq 0
				fcc/lsas/pah/pid le -0.02
				/controls/flight/elevator-trim ge -1.0
				attitude/roll-rad ge -0.0890118
				attitude/roll-rad le 0.0890118
			</test>
			<test logic="AND" value="3">
				fcc/lsas/prd/gain-switch eq 0
				fcc/elevator-feel/output ge 0.15
				/controls/flight/elevator-trim le 0.064516
				attitude/roll-rad ge -0.0890118
				attitude/roll-rad le 0.0890118
			</test>
			<test logic="AND" value="4">
				fcc/lsas/prd/gain-switch eq 0
				fcc/elevator-feel/output le -0.15
				/controls/flight/elevator-trim ge -1.0
				attitude/roll-rad ge -0.0890118
				attitude/roll-rad le 0.0890118
			</test>
		</switch>
		
		<fcs_function name="fcc/lsas/autotrim-offset">
			<function>
				<sum>
					<ifthen>
						<or>
							<eq>
								<property>fcc/lsas/autotrim-switch</property>
								<value>1</value>
							</eq>
							<eq>
								<property>fcc/lsas/autotrim-switch</property>
								<value>3</value>
							</eq>
						</or>
						<value>0.000025</value>
						<value>0.0</value>
					</ifthen>
					<ifthen>
						<or>
							<eq>
								<property>fcc/lsas/autotrim-switch</property>
								<value>2</value>
							</eq>
							<eq>
								<property>fcc/lsas/autotrim-switch</property>
								<value>4</value>
							</eq>
						</or>
						<value>-0.000025</value>
						<value>0.0</value>
					</ifthen>
				</sum>
			</function>
		</fcs_function>
		
		<fcs_function name="fcc/elevator-trim-output">
			<function>
				<sum>
					<property>/controls/flight/elevator-trim</property>
					<property>fcc/lsas/autotrim-offset</property>
				</sum>
			</function>
			<clipto>
				<min>-1.00</min>
				<max>0.064516</max>
			</clipto>
			<output>/controls/flight/elevator-trim</output>
		</fcs_function>
	
	</channel>
	
	<channel name="FCC: Yaw Axis and Yaw Damper">
		
		<switch name="fcc/yaw/autoland-switch">
			<default value="0"/>
			<test logic="AND" value="1">
				fcc/afs/enabled eq 1
				/it-autoflight/output/lat eq 4
			</test>
		</switch>
		
		<fcs_function name="fcc/yaw/rudder-nul">
			<function>
				<table>
					<independentVar lookup="row">/controls/flight/rudder</independentVar>
					<independentVar lookup="column">fcc/yaw/autoland-switch</independentVar>
					<tableData>
						       0  1
						-1.00 -1  0
						-0.02  0  0
						 0.02  0  0
						 1.00  1  0
					</tableData>
				</table>
			</function>
		</fcs_function>
		
		<washout_filter name="fcc/yaw/r-washout">
			<input>velocities/r-rad_sec</input>
			<c1>0.5</c1>
		</washout_filter>
		
		<switch name="fcc/yaw/r-r_s-s">
			<default value="fcc/yaw/r-washout"/>
			<test logic="OR" value="0">
				fcc/yaw/gain-switch ne 0
				fcc/yaw/autoland-switch eq 1
			</test>
		</switch>
		
		<pure_gain name="fcc/yaw/yd-f">
			<input>fcc/yaw/r-r_s-s</input>
			<gain>fcc/yaw/yd-p-gain</gain>
			<clipto>
				<min>-0.5</min>
				<max>0.5</max>
			</clipto>
		</pure_gain>
		
		<switch name="fcc/yaw/slip-skid">
			<default value="aero/beta-rad"/>
			<test logic="OR" value="0">
				position/wow eq 1
			</test>
		</switch>
		
		<pid name="fcc/yaw/tc-pd-v">
			<input>fcc/yaw/slip-skid</input>
			<kp>fcc/yaw/tc-p-gain</kp>
			<ki>0.0</ki>
			<kd>fcc/yaw/tc-d-gain</kd>
			<clipto>
				<min>-0.2</min>
				<max>0.2</max>
			</clipto>
			<output>fcc/yaw/tc-pd</output>
		</pid>
		
		<switch name="fcc/yaw/tc-pd-s">
			<default value="fcc/yaw/tc-pd"/>
			<test logic="OR" value="0">
				fcc/yaw/gain-switch ne 0
				fcc/yaw/autoland-switch eq 1
			</test>
		</switch>
		
		<switch name="fcc/yaw/afs-cmd">
			<default value="0"/>
			<test value="fcc/afs/yaw-cmd">
				fcc/yaw/autoland-switch eq 1
			</test>
		</switch>
		
		<summer name="fcc/yaw/output-sum">
			<input>fcc/yaw/yd-f</input>
			<input>fcc/yaw/tc-pd-s</input>
			<input>fcc/yaw/afs-cmd</input>
		</summer>
		
		<switch name="fcc/yaw/upper-output">
			<default value="fcc/yaw/output-sum"/>
			<test logic="AND" value="fcc/yaw/afs-cmd"> <!-- AFS keeps working even if YD is unavail -->
				fcc/yaw/avail-upper-a ne 1
				fcc/yaw/avail-upper-b ne 1
			</test>
		</switch>
		
		<switch name="fcc/yaw/lower-output">
			<default value="fcc/yaw/output-sum"/>
			<test logic="AND" value="fcc/yaw/afs-cmd"> <!-- AFS keeps working even if YD is unavail -->
				fcc/yaw/avail-lower-a ne 1
				fcc/yaw/avail-lower-b ne 1
			</test>
		</switch>
		
		<switch name="fcc/rudder-upper-output">
			<default value="fcc/yaw/rudder-nul"/>
			<test value="fcc/yaw/upper-output">
				fcc/yaw/rudder-nul eq 0
			</test>
		</switch>
		
		<summer name="fcc/rudder-upper-output">
			<input>fcc/yaw/rudder-nul</input>
			<input>fcc/yaw/upper-output</input>
			<clipto>
				<min>-1.0</min>
				<max>1.0</max>
			</clipto>
		</summer>
		
		<summer name="fcc/rudder-lower-output">
			<input>fcc/yaw/rudder-nul</input>
			<input>fcc/yaw/lower-output</input>
			<clipto>
				<min>-1.0</min>
				<max>1.0</max>
			</clipto>
		</summer>
	
	</channel>
	
	<channel name="Flap Lever">
		
		<switch name="/controls/flight/flaps-input">
			<default value="0"/> <!-- UP/RET -->
			<test logic="AND" value="1"> <!-- UP/EXT -->
				/controls/flight/flaps ge 0.20
				/controls/flight/flaps lt 0.36
			</test>
			<test logic="AND" value="2"> <!-- 10-25/EXT -->
				/controls/flight/flaps ge 0.36
				/controls/flight/flaps lt 0.52
			</test>
			<test logic="AND" value="3"> <!-- 28/EXT -->
				/controls/flight/flaps ge 0.52
				/controls/flight/flaps lt 0.68
			</test>
			<test logic="AND" value="4"> <!-- 35/EXT -->
				/controls/flight/flaps ge 0.68
				/controls/flight/flaps lt 0.84
			</test>
			<test value="5"> <!-- 50/EXT -->
				/controls/flight/flaps ge 0.84
			</test>
		</switch>
		
		<fcs_function name="/controls/flight/dial-a-flap-int">
			<function>
				<integer>
					<sum>
						<property>/controls/flight/dial-a-flap</property>
						<value>0.5</value> <!-- Make the integer rounded correctly -->
					</sum>
				</integer>
			</function>
			<clipto>
				<min>10</min>
				<max>25</max>
			</clipto>
		</fcs_function>
		
		<switch name="/controls/flight/flaps-cmd">
			<default value="0"/>
			<test value="/controls/flight/dial-a-flap-int">
				/controls/flight/flaps-input eq 2
			</test>
			<test value="28">
				/controls/flight/flaps-input eq 3
			</test>
			<test value="35">
				/controls/flight/flaps-input eq 4
			</test>
			<test value="50">
				/controls/flight/flaps-input eq 5
			</test>
		</switch>
		
		<switch name="/controls/flight/slats-cmd">
			<default value="0"/>
			<test value="31">
				/controls/flight/flaps-input ge 1
			</test>
		</switch>
		
		<switch name="/controls/flight/slats-cmd-limited">
			<default value="/controls/flight/slats-cmd"/>
			<test logic="AND" value="0"> <!-- System prevents UP/EXT position -->
				/controls/flight/flaps-input eq 1
				/instrumentation/airspeed-indicator/indicated-speed-kt ge 280
			</test>
			<test logic="AND" value="0"> <!-- System prevents UP/EXT position -->
				/controls/flight/flaps-input eq 1
				/instrumentation/airspeed-indicator/indicated-mach ge 0.55
			</test>
		</switch>
	
	</channel>
	
	<channel name="FCC: Flaps/Slats">
		
		<switch name="fcc/flap/max-deg">
			<default value="50"/>
			<test logic="AND" value="22">
				/instrumentation/airspeed-indicator/indicated-speed-kt gt /controls/fctl/flap-20-25-max-kts
				/controls/fctl/flap-limit-knob eq 0
				/systems/failures/fctl/flap-limit ne 1
			</test>
			<test logic="AND" value="25">
				/instrumentation/airspeed-indicator/indicated-speed-kt gt /controls/fctl/flap-28-max-kts
				/controls/fctl/flap-limit-knob eq 0
				/systems/failures/fctl/flap-limit ne 1
			</test>
			<test logic="AND" value="28">
				/instrumentation/airspeed-indicator/indicated-speed-kt gt /controls/fctl/flap-35-max-kts
				/controls/fctl/flap-limit-knob eq 0
				/systems/failures/fctl/flap-limit ne 1
			</test>
			<test logic="AND" value="35">
				/instrumentation/airspeed-indicator/indicated-speed-kt gt /controls/fctl/flap-50-max-kts
				/controls/fctl/flap-limit-knob eq 0
				/systems/failures/fctl/flap-limit ne 1
			</test>
		</switch>
		
		<pure_gain name="fcc/flap/cmd-deg">
			<input>/controls/flight/flaps-cmd</input>
			<gain>1.0</gain>
			<output>fcc/flap/cmd-deg-feedback</output>
			<clipto>
				<min>0</min>
				<max>fcc/flap/max-deg</max>
			</clipto>
		</pure_gain>
		
		<pure_gain name="fcc/slat/cmd-deg">
			<input>/controls/flight/slats-cmd-limited</input>
			<gain>1.0</gain>
			<output>fcc/slat/cmd-deg-feedback</output>
		</pure_gain>
	
	</channel>
	
	<channel name="FCC: Autobrake">
		
		<!-- Logic -->
		<switch name="/gear/abs/knob-input">
			<default value="0"/>
			<test value="/controls/gear/abs/knob">
				/systems/electrical/outputs/idk ge 25
			</test>
		</switch>
		
		<switch name="/gear/abs/armed-avail">
			<default value="0"/>
			<test logic="AND" value="/gear/abs/armed">
				/gear/abs/mode gt 0
				fcs/flap-pos-deg gt 28
				/instrumentation/irs/ir[0]/aligned eq 1
				/instrumentation/irs/ir[1]/aligned eq 1
			</test>
			<test logic="AND" value="/gear/abs/armed">
				/gear/abs/mode lt 0
				/instrumentation/irs/ir[0]/aligned eq 1
				/instrumentation/irs/ir[1]/aligned eq 1
			</test>
		</switch>
		
		<switch name="/gear/abs/active">
			<description>Flip flop for autobrake engage</description>
			<default value="/gear/abs/active"/>
			<test logic="OR" value="0"> <!-- Reset -->
				/gear/abs/armed-avail ne 1
			</test>
			<test logic="AND" value="1"> <!-- Set -->
				/gear/abs/armed-avail eq 1
				/gear/abs/mode ne 0
				/gear/abs/spoilers-cmd-deg gt 0
				position/wow eq 1
				/velocities/groundspeed-kt ge 60
			</test>
		</switch>
		
		<switch name="/gear/abs/disarm-brake">
			<default value="0.4"/>
			<test logic="OR" value="0.9">
				/gear/abs/mode eq -2
				/gear/abs/mode eq 3
			</test>
		</switch>
		
		<switch name="/gear/abs/throttle-can-disarm"> <!-- That way it won't trigger if you don't happen to be perfectly idled at touchdown -->
			<default value="/gear/abs/throttle-can-disarm"/>
			<test value="0">
				/gear/abs/active ne 1
			</test>
			<test logic="AND" value="1">
				fadec/throttle-lever-feedback[0] lt 0.05
				fadec/throttle-lever-feedback[2] lt 0.05
			</test>
		</switch>
		
		<switch name="/gear/abs/throttle-disarm">
			<default value="0"/>
			<test logic="AND" value="1">
				/gear/abs/throttle-can-disarm eq 1
				fadec/throttle-lever-feedback[0] ge 0.05
			</test>
			<test logic="AND" value="1">
				/gear/abs/throttle-can-disarm eq 1
				fadec/throttle-lever-feedback[2] ge 0.05
			</test>
		</switch>
		
		<switch name="/gear/abs/disarm">
			<default value="0"/>
			<test value="0">
				/gear/abs/active ne 1
			</test>
			<test logic="OR" value="1">
				/gear/abs/throttle-disarm eq 1
				/controls/gear/brake-left gt /gear/abs/disarm-brake
				/controls/gear/brake-right gt /gear/abs/disarm-brake
			</test>
		</switch>
		
		<switch name="/gear/abs/active-rate">
			<default value="1000"/> <!-- Instant -->
			<test logic="OR" value="0.33333333333"> <!-- 3 Seconds -->
				/gear/abs/mode eq 1
				/gear/abs/mode eq 2
			</test>
			<test value="1"> <!-- 1 Second -->
				/gear/abs/mode eq 3
			</test>
		</switch>
		
		<actuator name="/gear/abs/active-slow">
			<input>/gear/abs/active</input>
			<rate_limit sense="incr">/gear/abs/active-rate</rate_limit>
			<rate_limit sense="decr">1000</rate_limit> <!-- Instant -->
			<output>/gear/abs/active-slow-out</output>
		</actuator>
		
		<switch name="/gear/abs/active-final"> <!-- Spoilers going in will temporarily remove ABS, until they put back without disarming -->
			<default value="0"/>
			<test logic="OR" value="/gear/abs/active-slow">
				/gear/abs/spoilers-cmd-deg gt 0
			</test>
		</switch>
		
		<switch name="/gear/abs/rto-input-kts"> <!-- Latching Switch -->
			<default value="/instrumentation/airspeed-indicator/indicated-speed-kt"/>
			<test logic="AND" value="/gear/abs/rto-input-kts">
				/gear/abs/active eq 1
				/gear/abs/mode eq -1
			</test>
		</switch>
		
		<switch name="/gear/abs/decel-rate-cmd">
			<default value="0"/>
			<test value="-6.5"> <!-- MIN -->
				/gear/abs/mode eq 1
			</test>
			<test value="-9.0"> <!-- MED -->
				/gear/abs/mode eq 2
			</test>
			<test value="-50"> <!-- MAX -->
				/gear/abs/mode eq 3
			</test>
			<test logic="AND" value="-6.5"> <!-- RTO MIN -->
				/gear/abs/mode eq -1
				/gear/abs/rto-input-kts le 100
			</test>
			<test logic="AND" value="-50"> <!-- RTO MAX -->
				/gear/abs/mode eq -1
				/gear/abs/rto-input-kts gt 100
			</test>
		</switch>
		
		<!-- Controller -->
		<pid name="/gear/abs/decel-rate-kts">
			<descripton>Use D only to calculate rate of decel</descripton>
			<input>/velocities/groundspeed-kt</input>
			<kp>0.0</kp>
			<ki>0.0</ki>
			<kd>1.0</kd>
		</pid>
		
		<lag_filter name="/gear/abs/decel-rate-kts-lag">
			<input>/gear/abs/decel-rate-kts</input>
			<c1>1.0</c1>
		</lag_filter>
		
		<pure_gain name="/gear/abs/decel-rate-fps2">
			<input>/gear/abs/decel-rate-kts-lag</input>
			<gain>1.687809857099737</gain> <!-- Knots to FPS squared -->
		</pure_gain>
		
		<summer name="/gear/abs/decel-error">
			<input>/gear/abs/decel-rate-fps2</input>
			<input>-/gear/abs/decel-rate-cmd</input>
		</summer>
		
		<switch name="/gear/abs/brake-cmd-trigger">
			<default value="0"/>
			<test value="-1">
				/gear/abs/active-final ne 1
			</test>
			<test logic="OR" value="1">
				/gear/abs/brake-cmd le 0.001
				/gear/abs/brake-cmd ge 0.999
			</test>
		</switch>
		
		<pid name="/gear/abs/brake-cmd-v">
			<input>/gear/abs/decel-error</input>
			<kp>0.45</kp>
			<ki>0.25</ki>
			<kd>0.0</kd>
			<trigger>/gear/abs/brake-cmd-trigger</trigger>
			<clipto>
				<min>0.0</min>
				<max>1.0</max>
			</clipto>
			<output>/gear/abs/brake-cmd</output>
		</pid>
		
		<switch name="/gear/abs/brake-output">
			<default value="0"/>
			<test value="/gear/abs/brake-cmd">
				/gear/abs/active-final eq 1
			</test>
		</switch>
	
	</channel>

</system>
